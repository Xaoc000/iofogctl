trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - develop
  paths:
    exclude:
      - README.md

variables:
  GOROOT: '/usr/local/go1.12' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  package_version:

jobs:
  - job: CLI
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:

      - script: |
          mkdir -p '$(GOBIN)'
          mkdir -p '$(GOPATH)/pkg'
          mkdir -p '$(modulePath)'
          shopt -s extglob
          mv !(gopath) '$(modulePath)'
          echo '##vso[task.prependpath]$(GOBIN)'
          echo '##vso[task.prependpath]$(GOROOT)/bin'
        displayName: 'Set up the Go workspace'

      - task: GoTool@0
        inputs:
          version: '1.12.1'
          goPath: $(GOPATH)
          goBin: $(GOBIN)
        displayName: 'Install Golang'
      
      - script: |
          ./script/check_fmt.sh
        workingDirectory: '$(modulePath)'
        displayName: 'Check Source Format'

      - script: |
          script/bootstrap.sh
        workingDirectory: '$(modulePath)'
        displayName: 'Bootstrap'

      - script: |
          make dep
          make test
        workingDirectory: '$(modulePath)'
        displayName: 'Run Tests'
      
      - script: |
          make build
          GOPATH=$(GOPATH) GOBIN=$(GOBIN) make install
        workingDirectory: '$(modulePath)'
        displayName: 'Build and Install'

      - script: |
          which iofogctl
          iofogctl --help
        displayName: 'Verify Install'

      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'package_cloud'
        displayName: 'Download package cloud token file'

      - task: UseRubyVersion@0
        inputs:
          versionSpec: '>= 2.5'
          addToPath: true
        displayName: 'Install Ruby'

      - script: |
          gem install fpm
          fpm -h
          gem install package_cloud
          package_cloud -h
          echo "config file..."
          echo $DOWNLOADSECUREFILE_SECUREFILEPATH
        displayName: 'Install package_cloud cli and fpm'

      - script: |
          version=$(git describe --always --long --dirty)
          echo $version
          fpm -f -s dir -t deb -n iofogctl -v $version $(GOBIN)/iofogctl=/usr/local/bin/
          package=$(ls | grep *.deb)
          echo $package
          echo "##vso[task.setvariable variable=package_version]$version"
          cp $package $(Build.ArtifactStagingDirectory) 
        displayName: 'Create Debian package'

      - script: |
          package=$(ls | grep *.deb)
          echo "package..."
          echo $package
          declare -a UBUNTU_VERS=("precise" "trusty" "utopic" "vivid" "wily" "xenial" "bionic") #Support ubuntu versions
          declare -a DEBIAN_VERS=("wheezy" "jessie" "stretch" "buster") #Also appplies to Raspbian, See related for loop
          for version in "${UBUNTU_VERS[@]}"
          do
              package_cloud push iofog/iofogctl-snapshots/ubuntu/${version} $package --config=$DOWNLOADSECUREFILE_SECUREFILEPATH
          done
          for version in "${DEBIAN_VERS[@]}"
          do
              package_cloud push iofog/iofogctl-snapshots/debian/${version} $package --config=$DOWNLOADSECUREFILE_SECUREFILEPATH
              package_cloud push iofog/iofogctl-snapshots/raspbian/${version} $package --config=$DOWNLOADSECUREFILE_SECUREFILEPATH
          done
        displayName: 'Publish deb to package-cloud'

      - script: |
          echo $(package_version)
          fpm -f -s dir -t rpm -n iofogctl -v $(package_version) $(GOBIN)/iofogctl=/usr/local/bin/
          package=$(ls | grep *.rpm)
          echo $package
          cp $package $(Build.ArtifactStagingDirectory) 
        displayName: 'Create RPM package'

      - script: |
          package=$(ls | grep *.rpm)
          echo "package..."
          echo $package
          declare -a FEDORA_VERS=("22" "23" "24") #Supported Fedora Versions
          declare -a REDHAT_VERS=("6" "7") #Supported Redhat versions
          for version in ${FEDORA_VERS[@]}
          do
              package_cloud push iofog/iofogctl-snapshots/fedora/${version} $package --config=$DOWNLOADSECUREFILE_SECUREFILEPATH
          done
          for version in ${REDHAT_VERS[@]}
          do
              package_cloud push iofog/iofogctl-snapshots/el/${version} $package --config=$DOWNLOADSECUREFILE_SECUREFILEPATH
          done
        displayName: 'Publish RPM to package-cloud'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'iofogctl'
        displayName: 'Publish artefacts'