steps:
- task: DownloadSecureFile@1
  displayName: 'Download secure file'
  inputs:
    secureFile: 'azure-gcp.json'
- bash: |
    CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
    echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    sudo apt-get update && sudo apt-get install google-cloud-sdk
    gcloud --quiet auth activate-service-account --key-file=$(Agent.TempDirectory)/azure-gcp.json
    gcloud --quiet config set project $(gcp.project.name)
    gcloud --quiet container clusters get-credentials $(gcp.cluster.name) --region $(gcp.cluster.region)
  displayName: 'set up gcloud'
- script: |
    for IDX in $(seq 1 $(vm_count)); do
      gcloud compute --project=$(gcp.project.name) instances create iofogctl-ci-$(jobuuid)-$IDX --zone=$(zone) --machine-type=n1-standard-1 --boot-disk-size 200GB --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --service-account=$(gcp.svcacc.name) --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append --image=debian-9-stretch-v20190729 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=iofogctl-ci-$(jobuuid)-$IDX
      VM_HOST=$(gcloud compute instances list | grep iofogctl-ci-$(jobuuid)-$IDX | awk '{print $5}')
      echo "##vso[task.setvariable variable=vm_$IDX]$(gcp.vm.user)@$VM_HOST"
    done
  displayName: 'Deploy Test VMs'
- script: |
    NS=$(jobuuid)
    sed -i "s|NAMESPACE=.*|NAMESPACE=\"$NS\"|g" test/env.sh
    sed -i "s|AGENT_LIST=.*|AGENT_LIST=\"$(vm_1) $(vm_2)\"|g" test/env.sh
    sed -i "s|VANILLA_CONTROLLER=.*|VANILLA_CONTROLLER=\"$(vm_3)\"|g" test/env.sh
    sed -i "s|KUBE_CONFIG=.*|KUBE_CONFIG=\"~/.kube/config\"|g" test/env.sh
    sed -i "s|KEY_FILE=.*|KEY_FILE=\"~/id_rsa\"|g" test/env.sh
    sed -i "s|PACKAGE_CLOUD_TOKEN=.*|PACKAGE_CLOUD_TOKEN=\"$(pkg.token)\"|g" test/env.sh
    cp test/env.sh test/conf
    cat $(Agent.TempDirectory)/id_rsa > ~/id_rsa
    echo $(ssh.user.pub) > ~/id_rsa.pub
  workingDirectory: '$(modulePath)'
  displayName: 'Configure Tests'
- script: |
    git clone https://github.com/bats-core/bats-core.git && cd bats-core && git checkout tags/v1.1.0 && sudo ./install.sh /usr/local
    # Use of sudo is recommended here: https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/javascript?view=azure-devops#install-tools-on-your-build-agent
    sudo npm i -g tap-junit
  displayName: 'Bootstrap for Tests'
- script: |
    test/run.bash smoke
  workingDirectory: '$(modulePath)'
  displayName: 'Run Smoke Tests'